#!/usr/bin/python
#-*- coding: utf-8 -*-
import sys
import re
import requests
import argparse
import commands
import operator
from bs4 import BeautifulSoup
from flask import Flask, jsonify, request, render_template
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
reload(sys)
sys.setdefaultencoding('utf-8')

def clean_text(text):
	cleaned_text=re.sub('[\{\}\[\]\/?.,;:|\)*~`!^\â€“_+<>@\#$%&\\\=\(\'\"]',
                          '', text)

	return cleaned_text

app = Flask(__name__)

@app.route('/file', methods=['POST'])
def file():
	if request.method == 'POST':
		f = request.files['file']
                lines = f.readlines()
                f.close()
		for i in lines:
			

		return t


@app.route('/result', methods=['POST'])
def URL():
        if request.method == 'POST':
		Input = request.form['firstname']
		res = requests.get(Input)
		soup = BeautifulSoup(res.content, "html.parser")
		a = soup.find_all('div')
		txt=""
		for i in a:
			txt = txt+i.get_text()
		txt = clean_text(txt)
		tokens = word_tokenize(txt)
		
		d = {}
		for word in tokens:
			if word in d:
				d[word] = d[word]+1
			else:
				d[word] = 1
		d = sorted(d.items(), key = operator.itemgetter(1,0),reverse=True)

		e=""
		key=""
		value=""
		for i in range(0,10):
			key=str(d[i][0])
			value=str(d[i][1])
			e=e+"<tr><td>"+key+"</td><td>"+value+"</td></tr>"

		return "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Post</title></head><body><form action=\"/result\" method=\"post\"><p>Input URL<input type=\"text\" name=\"firstname\"></p><input type=\"submit\" value=\"Analyze\"></form>"+"<table><th>Word</th><th>Frequency</th>"+e+"</table></body></html>"

@app.route('/', methods=['GET'])
def homepage():
	upload="<form action = \"/file\" method = \"post\" enctype =\"multipart/form-data\"><input type = \"file\" name = \"file\" /><input type = \"submit\" /></form>"

	return "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Post</title></head><body><form action=\"/result\" method=\"post\"><p>Input URL<input type=\"text\" name=\"firstname\"></p><input type=\"submit\" value=\"Analyze\"></form>"+upload+"</body></html>"

if __name__ == '__main__':
    try:
        parser = argparse.ArgumentParser(description="")
        parser.add_argument('--listen-port',  type=str, required=True, help='REST service listen port')
        args = parser.parse_args()
        listen_port = args.listen_port
    except Exception, e:
        print('Error: %s' % str(e))

    ipaddr=commands.getoutput("hostname -I").split()[0]
    print "Starting the service with ip_addr="+ipaddr
    app.run(debug=False,host=ipaddr,port=int(listen_port))
